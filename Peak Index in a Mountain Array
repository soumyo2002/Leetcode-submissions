Link to the problem:https://leetcode.com/problems/peak-index-in-a-mountain-array/


2 METHODS:

Method 1:
class Solution {
    public int binary(int[] a){
        int n=a.length;
        int start=0,end=n-1;
        
        while(start<=end){
            int mid=start+(end-start)/2;
            
            if(mid>0 && mid<(n+1)){
                
                if(a[mid]>a[mid+1] && a[mid]>a[mid-1])
                    return mid;
                
                if(a[mid]<a[mid-1])
                    end=mid-1;
                
                if(a[mid]<a[mid+1])
                    start=mid+1;
            }
            else{
                
                if(mid==0){
                    if(a[mid]>a[mid+1])
                    return mid;
                
                if(a[mid]<a[mid+1])
                    start=mid+1;
                }
                else{
                    if(a[mid]>a[mid-1])
                    return mid;
                
                    if(a[mid]<a[mid-1])
                    end=mid-1;
                }
            }
        }
        
        return -1;
    }
    public int peakIndexInMountainArray(int[] arr) {
        return(binary(arr));
    }
}

Method 2:
class Solution {
    public int peakIndexInMountainArray(int[] arr) {
        int start=0,end=arr.length-1;
        
        while(start<end){
            int mid=start+((end-start)/2);
            if(arr[mid]>arr[mid+1])
                end=mid;
            else 
                start=mid+1;
        }
        return start;
    }
}
